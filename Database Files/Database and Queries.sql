CREATE DATABASE BANK_PORTFOLIO 
GO

USE BANK_PORTFOLIO 
GO

CREATE TABLE CLIENT_SECTOR(
	COD_CLIENT_SECTOR	INT IDENTITY(1,1) PRIMARY KEY,
	NAME_SECTOR			VARCHAR(50) NOT NULL
);

CREATE TABLE TRADE_CATEGORY(
	COD_TRADE_CATEGORY	INT IDENTITY(1,1) PRIMARY KEY,
	NAME_TRADE_CATEGORY	VARCHAR(50) NOT NULL
);

CREATE TABLE TRADE
(
	[COD_TRADE]				INT IDENTITY(1,1) PRIMARY KEY,
	[VALUE]					DECIMAL NOT NULL,
	[COD_CLIENT_SECTOR]		INT NOT NULL,
	[COD_TRADE_CATEGORY]	INT NOT NULL
);
GO

ALTER TABLE TRADE
ADD CONSTRAINT COD_CLIENT_SECTOR_FK FOREIGN KEY (COD_CLIENT_SECTOR) REFERENCES CLIENT_SECTOR (COD_CLIENT_SECTOR)
GO

ALTER TABLE TRADE
ADD CONSTRAINT COD_TRADE_CATEGORY_FK FOREIGN KEY (COD_TRADE_CATEGORY) REFERENCES TRADE_CATEGORY (COD_TRADE_CATEGORY)
GO


/*#####################################################
 INSERTS
#######################################################*/
INSERT INTO CLIENT_SECTOR (NAME_SECTOR) VALUES ('PRIVATE');
INSERT INTO CLIENT_SECTOR (NAME_SECTOR) VALUES ('PUBLIC');

INSERT INTO TRADE_CATEGORY (NAME_TRADE_CATEGORY) VALUES ('HIGHRISK');
INSERT INTO TRADE_CATEGORY (NAME_TRADE_CATEGORY) VALUES ('MEDIUMRISK');
INSERT INTO TRADE_CATEGORY (NAME_TRADE_CATEGORY) VALUES ('LOWRISK');
INSERT INTO TRADE_CATEGORY (NAME_TRADE_CATEGORY) VALUES ('NO_CATEGORY');

INSERT INTO TRADE ([VALUE], COD_CLIENT_SECTOR, COD_TRADE_CATEGORY) VALUES (2000000.00, 1,1);
INSERT INTO TRADE ([VALUE], COD_CLIENT_SECTOR, COD_TRADE_CATEGORY) VALUES (400000.00, 2,3)
INSERT INTO TRADE ([VALUE], COD_CLIENT_SECTOR, COD_TRADE_CATEGORY) VALUES (500000.00, 2,3)
INSERT INTO TRADE ([VALUE], COD_CLIENT_SECTOR, COD_TRADE_CATEGORY) VALUES (3000000.00, 2,2)
GO

/*#####################################################
	VIEW 
#######################################################*/

CREATE OR ALTER VIEW VW_TRADE_RISK
AS

	SELECT		T.[VALUE],
				CS.NAME_SECTOR,
				TG.NAME_TRADE_CATEGORY
	FROM		TRADE			T  WITH(NOLOCK)
	INNER JOIN	CLIENT_SECTOR	CS WITH(NOLOCK) ON T.COD_CLIENT_SECTOR  = CS.COD_CLIENT_SECTOR
	INNER JOIN	TRADE_CATEGORY	TG WITH(NOLOCK) ON T.COD_TRADE_CATEGORY = TG.COD_TRADE_CATEGORY

GO

--SELECT * FROM VW_TRADE_RISK
/*#####################################################
	PROCEDURE 
#######################################################*/
CREATE OR ALTER PROCEDURE PRC_TRADE_RISK_WITH_PARAMETER
	@VALUE_RISK		DECIMAL,
	@CLIENT_SECTOR VARCHAR(50)
AS
BEGIN
	SELECT	CASE 
				WHEN @VALUE_RISK <  1000000 AND @CLIENT_SECTOR = 'PUBLIC'  THEN 'LOWRISK'
				WHEN @VALUE_RISK >= 1000000 AND @CLIENT_SECTOR = 'PUBLIC'  THEN 'MEDIUMRISK'
				WHEN @VALUE_RISK >= 1000000 AND @CLIENT_SECTOR = 'PRIVATE' THEN 'HIGHRISK'
				ELSE 'NO_CATEGORY'
			END
END
GO

--EXEC PRC_TRADE_RISK_WITH_PARAMETER @VALUE_RISK = 2000000, @CLIENT_SECTOR = 'PRIVATE' 
--EXEC PRC_TRADE_RISK_WITH_PARAMETER @VALUE_RISK = 2000000, @CLIENT_SECTOR = 'PUBLIC' 
--EXEC PRC_TRADE_RISK_WITH_PARAMETER @VALUE_RISK = 100000 , @CLIENT_SECTOR = 'PUBLIC' 

/*#####################################################
	FUNCTION
#######################################################*/
CREATE OR ALTER FUNCTION FNC_TRADE_RISK_WITH_PARAMETER
(
	@VALUE_RISK		DECIMAL,
	@CLIENT_SECTOR	VARCHAR(50)
)
RETURNS @TABLE_RISK TABLE 
(
	VALUE_RISK			DECIMAL,
	CLIENT_SECTOR		VARCHAR(50),
	RISK				VARCHAR(50),
	COD_TRADE_CATEGORY	INT
)
AS
BEGIN
	INSERT INTO @TABLE_RISK (VALUE_RISK, CLIENT_SECTOR, RISK)
	SELECT	@VALUE_RISK,
			@CLIENT_SECTOR,
			CASE 
				WHEN @VALUE_RISK <  1000000 AND @CLIENT_SECTOR = 'PUBLIC'  THEN 'LOWRISK'
				WHEN @VALUE_RISK >= 1000000 AND @CLIENT_SECTOR = 'PUBLIC'  THEN 'MEDIUMRISK'
				WHEN @VALUE_RISK >= 1000000 AND @CLIENT_SECTOR = 'PRIVATE' THEN 'HIGHRISK'
				ELSE 'NO_CATEGORY'
			END


	UPDATE		TR
	SET			TR.COD_TRADE_CATEGORY = TG.COD_TRADE_CATEGORY
	FROM		TRADE_CATEGORY TG WITH(NOLOCK)
	INNER JOIN	@TABLE_RISK TR ON TG.NAME_TRADE_CATEGORY = TR.RISK
	
	RETURN;
END
GO

--SELECT * FROM FNC_TRADE_RISK_WITH_PARAMETER(2000000,'PRIVATE')
--SELECT * FROM FNC_TRADE_RISK_WITH_PARAMETER(2000000, 'PUBLIC') 
--SELECT * FROM FNC_TRADE_RISK_WITH_PARAMETER(100000 , 'PUBLIC')

/*#####################################################
	SELECT WITH PIVOT
#######################################################*/

SELECT		CS.NAME_SECTOR,
			SUM(T.[VALUE])		AS VALUE_RISK,
			SUM([LOWRISK])		AS LOW_RISK,
			SUM([MEDIUMRISK])	AS MEDIUM_RISK, 
			SUM([HIGHRISK])		AS HIGH_RISK,
			SUM([NO_CATEGORY])  AS NO_CATEGORY
FROM		TRADE			T  WITH(NOLOCK)
INNER JOIN	CLIENT_SECTOR	CS WITH(NOLOCK) ON T.COD_CLIENT_SECTOR  = CS.COD_CLIENT_SECTOR
INNER JOIN	(
			SELECT	* 
			FROM	TRADE_CATEGORY
			PIVOT
			(
				COUNT(NAME_TRADE_CATEGORY) FOR NAME_TRADE_CATEGORY IN ([LOWRISK], [MEDIUMRISK], [HIGHRISK], [NO_CATEGORY])
			) AS P
) AS PT ON T.COD_TRADE_CATEGORY = PT.COD_TRADE_CATEGORY
GROUP BY	CS.NAME_SECTOR